name: Android CI (Java 8 Legacy)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1. 使用 Java 8
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'gradle'

      # 2. 使用国内镜像源安装 Android SDK
      - name: Install Android SDK with Mirror
        run: |
          # 设置环境变量
          ANDROID_HOME=/usr/local/android-sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          
          # 创建目录
          sudo mkdir -p $ANDROID_HOME
          sudo chmod -R 777 $ANDROID_HOME
          mkdir -p $ANDROID_HOME/licenses
          
          # 接受许可证
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          
          # 下载命令行工具（使用国内镜像）
          wget -q https://mirrors.cloud.tencent.com/android/repository/commandlinetools-linux-7583922_latest.zip
          unzip -q commandlinetools-linux-*.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm commandlinetools-linux-*.zip
          
          # 设置 PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          
          # 配置镜像源
          mkdir -p $ANDROID_HOME/cmdline-tools/latest/bin
          echo "systemProp.http.proxyHost=mirrors.cloud.tencent.com" > $ANDROID_HOME/cmdline-tools/latest/bin/options
          echo "systemProp.http.proxyPort=80" >> $ANDROID_HOME/cmdline-tools/latest/bin/options
          echo "systemProp.https.proxyHost=mirrors.cloud.tencent.com" >> $ANDROID_HOME/cmdline-tools/latest/bin/options
          echo "systemProp.https.proxyPort=80" >> $ANDROID_HOME/cmdline-tools/latest/bin/options
          
          # 安装必要组件（使用国内镜像）
          yes | sdkmanager --verbose --sdk_root=$ANDROID_HOME --channel=0 \
            --install \
            "platforms;android-26" \
            "build-tools;27.0.3" \
            "platform-tools" \
            "tools" \
            --proxy=http --proxy_host=mirrors.cloud.tencent.com --proxy_port=80

      # 3. 配置 Gradle 使用镜像源
      - name: Configure Gradle Mirror
        run: |
          # 创建全局 Gradle 配置文件
          mkdir -p ~/.gradle
          echo "systemProp.http.proxyHost=mirrors.cloud.tencent.com" > ~/.gradle/gradle.properties
          echo "systemProp.http.proxyPort=80" >> ~/.gradle/gradle.properties
          echo "systemProp.https.proxyHost=mirrors.cloud.tencent.com" >> ~/.gradle/gradle.properties
          echo "systemProp.https.proxyPort=80" >> ~/.gradle/gradle.properties
          echo "android.builder.sdkDownload=true" >> ~/.gradle/gradle.properties
          
          # 使用 Gradle 4.10.3
          sed -i 's/distributionUrl=.*/distributionUrl=https\:\/\/mirrors.cloud.tencent.com\/gradle\/distributions\/gradle-4.10.3-bin.zip/' gradle/wrapper/gradle-wrapper.properties

      # 4. 修复 gradlew 权限
      - name: Fix gradlew permissions
        run: |
          chmod +x gradlew
          sudo chmod +x gradlew
          ls -l gradlew

      # 5. 构建项目
      - name: Build with Gradle
        run: |
          ./gradlew --version
          ./gradlew build --stacktrace
